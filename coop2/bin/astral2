#!/usr/bin/env python3

#import datetime
from datetime import datetime, timedelta, date
import time
import astral
import pytz
import schedule

loctz = pytz.timezone('US/Central')

# city, country, latitude, longitude, time zone, elevation
coordinates = ["Poplar Bluff", "USA", 36.763084, -90.413871, 'US/Central', 110]
pbmo = astral.Location(info=(coordinates))
pbmo.solar_depression = "civil"

dateFormat = '%b %d %Y'
timeFormat = '%I:%M %p'
lastDate = datetime.date(datetime.now(loctz) - timedelta(days=1))

events = pbmo.sun(datetime.now(loctz))
dawn = events['dawn']
sunrise = events['sunrise']
sunset = events['sunset']
dusk = events['dusk']

def update():
	global events
	global dawn
	global sunrise
	global sunset
	global dusk
	events = pbmo.sun(datetime.now(loctz))
	dawn = events['dawn']
	sunrise = events['sunrise']
	sunset = events['sunset']
	dusk = events['dusk']
	now = datetime.now(loctz)
	print('Today Date {}'.format(now.strftime(dateFormat)))
	print('Update Door Open == {}'.format(now > dawn and now < dusk))
	print('Dawn {}'.format(dawn.strftime(timeFormat)))
	print('Sunrise {}'.format(sunrise.strftime(timeFormat)))
	print('Now {}'.format(now.strftime(timeFormat)))
	print('Sunset {}'.format(sunset.strftime(timeFormat)))
	print('Dusk {}'.format(dusk.strftime(timeFormat)))

def status():
	now = datetime.now(loctz)
	openDoor = now > dawn and now < dusk
	nowTime = now.strftime(timeFormat)
	print('now {}\ndawn {}\ndusk {}'.format(now, dawn, dusk))
	print('Time {} Door Open == {}'.format(nowTime, openDoor))


schedule.every(5).minutes.do(status)

try:
	while True:
		schedule.run_pending()
		today = datetime.date(datetime.now(pytz.timezone('US/Central')))
		if lastDate != today:
			lastDate = today
			update()
		time.sleep(.1)

except KeyboardInterrupt:
	# here you put any code you want to run before the program
	# exits when you press CTRL+C
	print('\nKeyBoard Interrupt')

except Exception as e:
	# this covers all other exceptions
	print(str(e))

